package com.cybersource.schemas.transaction_data.transactionprocessor;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * CyberSource Web Service
 *
 * This class was generated by Apache CXF 3.3.2
 * 2019-06-10T10:45:22.066+07:00
 * Generated source version: 3.3.2
 *
 */
@WebServiceClient(name = "TransactionProcessor",
                  wsdlLocation = "file:/Users/junlapong/git-space/cybersource/cybersource-soap-java/src/main/resources/wsdl/CyberSourceTransaction.wsdl",
                  targetNamespace = "urn:schemas-cybersource-com:transaction-data:TransactionProcessor")
public class TransactionProcessor extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:schemas-cybersource-com:transaction-data:TransactionProcessor", "TransactionProcessor");
    public final static QName PortXML = new QName("urn:schemas-cybersource-com:transaction-data:TransactionProcessor", "portXML");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/junlapong/git-space/cybersource/cybersource-soap-java/src/main/resources/wsdl/CyberSourceTransaction.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(TransactionProcessor.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/junlapong/git-space/cybersource/cybersource-soap-java/src/main/resources/wsdl/CyberSourceTransaction.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public TransactionProcessor(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TransactionProcessor(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TransactionProcessor() {
        super(WSDL_LOCATION, SERVICE);
    }

    public TransactionProcessor(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public TransactionProcessor(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public TransactionProcessor(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns ITransactionProcessor
     */
    @WebEndpoint(name = "portXML")
    public ITransactionProcessor getPortXML() {
        return super.getPort(PortXML, ITransactionProcessor.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ITransactionProcessor
     */
    @WebEndpoint(name = "portXML")
    public ITransactionProcessor getPortXML(WebServiceFeature... features) {
        return super.getPort(PortXML, ITransactionProcessor.class, features);
    }

}
